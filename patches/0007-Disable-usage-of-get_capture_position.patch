From 1e11edfe6fb5335665f46d1def292b9ca977bc52 Mon Sep 17 00:00:00 2001
From: DeckerSU <support@decker.su>
Date: Sat, 18 Feb 2017 23:46:58 +0300
Subject: [PATCH 4/6] Disable usage of get_capture_position

'get_capture_position' is a newly introduced API that is not yet
supported by Meizu audio HAL (as of 4.5.4I stock image), so
we disable its usage to avoid crash

Thx to: Dmitry Smirnov <divis1969@gmail.com>

Change-Id: I2d5dc09558034f5253e8c9330e9980225a21201c
---
 services/audioflinger/Threads.cpp | 780 +-------------------------------------
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/services/audioflinger/Threads.cpp b/services/audioflinger/Threads.cpp
index a6857fe54..db0e7447f 100644
--- a/services/audioflinger/Threads.cpp
+++ b/services/audioflinger/Threads.cpp
@@ -6349,7 +6349,7 @@ bool AudioFlinger::RecordThread::threadLoop()
         mTimestamp.mTimeNs[ExtendedTimestamp::LOCATION_SERVER] = systemTime();
 
         // Update server timestamp with kernel stats
-        if (mPipeSource.get() == nullptr /* don't obtain for FastCapture, could block */) {
+        /*if (mPipeSource.get() == nullptr /* don't obtain for FastCapture, could block */) {
             int64_t position, time;
             int ret = mInput->stream->getCapturePosition(&position, &time);
             if (ret == NO_ERROR) {
@@ -6361,7 +6361,7 @@ bool AudioFlinger::RecordThread::threadLoop()
                 // Also, it is not advantageous to call get_presentation_position during the read
                 // as the read obtains a lock, preventing the timestamp call from executing.
             }
-        }
+        }*/
         // Use this to track timestamp information
         // ALOGD("%s", mTimestamp.toString().c_str());
 
-- 
2.7.4

